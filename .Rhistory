listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
nrow(listings$loan_origination_date)
View(listings)
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%d/%m/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
# remove NAs
listings <- listings[complete.cases(listings),]
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
Calculatequarters <- function(date) {
if(date >= 90) {
return("First quarter")
} else if(x > 182) {
return("Second quarter")
} else if(x > 274) {
return("Third quarter")
} else {
return("Fourth quarter")
}
}
for(i in 0:nrow(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
nrow(listings$loan_origination_date)
nrows(listings$loan_origination_date)
nrow(listings$loan_origination_date)
listings$loan_origination_date
nrow(listings$loan_origination_date)
str(listings$loan_origination_date)
NROW(listings$loan_origination_date)
for(i in 0:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date >= 90) {
return("First quarter")
} else if(x > 182) {
return("Second quarter")
} else if(x > 274) {
return("Third quarter")
} else {
return("Fourth quarter")
}
}
for(i in 0:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
listings$loan_origination_date[10]
Calculatequarters(4)
Calculatequarters <- function(date) {
if(date >= 90) {
return("First quarter")
} else if(date > 182) {
return("Second quarter")
} else if(date > 274) {
return("Third quarter")
} else {
return("Fourth quarter")
}
}
Calculatequarters(4)
for(i in 0:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
listings$loan_origination_date[0]
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date >= 90) {
return("First quarter")
} else if(date > 182) {
return("Second quarter")
} else if(date > 274) {
return("Third quarter")
} else {
return("Fourth quarter")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters(4)
listings$loan_origination_date[0]
NROW(listings$loan_origination_date)
str(listings$loan_origination_date)
View(listings)
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date > 182) {
return("2")
} else if(date > 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date > 182) {
return("2")
} else if(date > 274) {
return("3")
} else if(date > 500) {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date > 182) {
return("2")
} else if(date > 274) {
return("3")
} else if(date > 350) {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
ggplot(aes(x = quarter, y = stated_monthly_income), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) + labs(y="y", x="x", colour="Loan Status") +
scale_colour_brewer(palette = "Accent")
hist(listings$quarters)
str(listings)
listings$quarters <- as.numeric(listings$quarters)
ggplot(aes(x = quarter, y = stated_monthly_income), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) + labs(y="y", x="x", colour="Loan Status") +
scale_colour_brewer(palette = "Accent")
hist(listings$quarters)
geom_bar(listings$quarters)
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(color=loan_status, fill=loan_status))
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(color=loan_status, fill=factor(loan_status))
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(color=loan_status, fill=factor(loan_status))
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(color=loan_status, fill=factor(loan_status)))
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(fill=factor(loan_status)))
ggplot(aes(x = quarters, y = stated_monthly_income), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) + labs(y="y", x="x", colour="Loan Status") +
scale_colour_brewer(palette = "Accent")
ggplot(aes(x = quarters, y = stated_monthly_income), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) + labs(y="y", x="x", colour="Loan Status") +
scale_colour_brewer(palette = "Accent") + scale_x_continuous(breaks = c(1, 2, 3, 4))
ggplot(aes(x = quarters, y = stated_monthly_income), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent")
ggplot(aes(x = quarters, y = scorex), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent")
ggplot(aes(x = scorex, y = quarters), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent")
ggplot(aes(x = quarters, y = income_range), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent")
ggplot(aes(x = quarters, y = income_range), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent") + scale_x_continuous(breaks = c(1, 2, 3, 4))
str(listings$quarters)
summary(listings$quarters)
str(listings)
listings$quarters <- as.integer(listings$quarters)
ggplot(aes(x = quarters, y = income_range), data = listings) +
geom_jitter(alpha=1/7, aes(color=loan_status) ) +
scale_colour_brewer(palette = "Accent") + scale_x_continuous(breaks = c(1, 2, 3, 4))
ggplotgeom_bar(listings$quarters)
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(fill=factor(loan_status)))
help("count")
library(plyr)
help(ddply)
help("aggregate")
sum(listings$quarters == 4)
sum(listings$quarters == 1)
help(if)
help("if")
sum(listings$quarters == 1 & listings$loan_status==0)
sum(listings$quarters == 1)
Q1 <- sum(listings$quarters == 1)
Q1_1 <- sum(listings$quarters == 1 & listings$loan_status==1)
Q1Ratio <- Q1_1/Q
Q1Ratio <- Q1_1/Q1
Q1Ratio
Q1 <- sum(listings$quarters == 1)
Q1_1 <- sum(listings$quarters == 1 & listings$loan_status==1)
Q1Ratio <- Q1_1/Q1
Q1Ratio
Q2 <- sum(listings$quarters == 2)
Q2_1 <- sum(listings$quarters == 2 & listings$loan_status==1)
Q2Ratio <- Q2_1/Q2
Q2Ratio
Q3 <- sum(listings$quarters == 3)
Q3_1 <- sum(listings$quarters == 3 & listings$loan_status==1)
Q3Ratio <- Q3_1/Q3
Q3Ratio
Q4 <- sum(listings$quarters == 4)
Q4_1 <- sum(listings$quarters == 4 & listings$loan_status==1)
Q4Ratio <- Q4_1/Q4
Q4Ratio
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
library(plyr)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
library(plyr)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
```{r cars}
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
listings$quarters <- as.integer(listings$quarters)
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(fill=factor(loan_status)))
Q1 <- sum(listings$quarters == 1)
Q1_1 <- sum(listings$quarters == 1 & listings$loan_status==1)
Q1Ratio <- Q1_1/Q1
Q1Ratio
Q2 <- sum(listings$quarters == 2)
Q2_1 <- sum(listings$quarters == 2 & listings$loan_status==1)
Q2Ratio <- Q2_1/Q2
Q2Ratio
Q3 <- sum(listings$quarters == 3)
Q3_1 <- sum(listings$quarters == 3 & listings$loan_status==1)
Q3Ratio <- Q3_1/Q3
Q3Ratio
Q4 <- sum(listings$quarters == 4)
Q4_1 <- sum(listings$quarters == 4 & listings$loan_status==1)
Q4Ratio <- Q4_1/Q4
Q4Ratio
library(lubridate)
library(gmodels)
library(ggplot2)
library(dplyr)
library(class)
library(gmodels)
listings <- read.csv("Listings2013.csv")
sapply(data, function(x) sum(is.na(x)))
listings$number_of_days <- NULL
listings$principal_balance <- NULL
listings$loan_status_description <- NULL
listings$prosper_rating <- NULL
listings$listing_monthly_payment <- NULL
listings$loan_status[listings$loan_status == 1] <- 0
listings$loan_status[listings$loan_status == 4] <- 0
listings$loan_status[listings$loan_status == 2] <- 1
listings$loan_status[listings$loan_status == 3] <- 1
# remove NAs
listings <- listings[complete.cases(listings),]
listings$loan_origination_date <- as.Date(listings$loan_origination_date, "%m/%d/%Y")
listings$loan_origination_date <- as.numeric(listings$loan_origination_date)
listings$loan_origination_date <- listings$loan_origination_date-15705
Calculatequarters <- function(date) {
if(date <= 90) {
return("1")
} else if(date <= 182) {
return("2")
} else if(date <= 274) {
return("3")
} else {
return("4")
}
}
for(i in 1:NROW(listings$loan_origination_date)){
listings$quarters[i] <- Calculatequarters(listings$loan_origination_date[i])
}
listings$quarters <- as.integer(listings$quarters)
ggplot(aes(x=quarters), data=listings) + geom_bar(aes(fill=factor(loan_status)))
Q1 <- sum(listings$quarters == 1)
Q1_1 <- sum(listings$quarters == 1 & listings$loan_status==1)
Q1Ratio <- Q1_1/Q1
Q1Ratio
Q2 <- sum(listings$quarters == 2)
Q2_1 <- sum(listings$quarters == 2 & listings$loan_status==1)
Q2Ratio <- Q2_1/Q2
Q2Ratio
Q3 <- sum(listings$quarters == 3)
Q3_1 <- sum(listings$quarters == 3 & listings$loan_status==1)
Q3Ratio <- Q3_1/Q3
Q3Ratio
Q4 <- sum(listings$quarters == 4)
Q4_1 <- sum(listings$quarters == 4 & listings$loan_status==1)
Q4Ratio <- Q4_1/Q4
Q4Ratio
